dnl Process this file with autoconf to produce a configure script.
dnl
dnl configure.in
dnl

AC_REVISION([configure.in 1.1])
AC_INIT(sox.c)
dnl AC_CONFIG_HEADER(config.h)

dnl Parameters to configure

AC_ARG_ENABLE(old_rate,
	[  --enable-old-rate       Use old rate code])

AC_ARG_ENABLE(fast_ulaw,
	[  --enable-fast-ulaw      Use fast ulaw compression (+32K memory)])

AC_ARG_ENABLE(fast_alaw,
	[  --enable-fast-alaw      Use fast alaw compression (+32K memory)])

AC_ARG_WITH(gsmlib,
	[  --with-gsmlib           Location of GSM 6.10 library (=dir)],
	[gsmlib="$withval"],
	[gsmlib=auto])

AC_ARG_WITH(gsminc,
	[  --with-gsminc           Location of GSM 6.10 headers (=dir)],
	[gsminc="$withval"],
	[gsminc=auto])

AC_ARG_WITH(alsa_dsp,
	[  --with-alsa-dsp         Force support for /dev/snd/pcmABXY (ALSA)],
	[alsa_dsp="$withval"],
	[alsa_dsp=auto])

AC_ARG_WITH(oss_dsp,
	[  --with-oss-dsp          Force support for /dev/dsp (OSS)],
	[oss_dsp="$withval"],
	[oss_dsp=auto])

AC_ARG_WITH(sun_audio,
	[  --with-sun-audio        Force support for /dev/audio (SUN, etc)],
	[sun_audio="$withval"],
	[sun_audio=auto])

AC_ARG_WITH(ogg_vorbislib,
	[  --with-ogg-vorbislib    Location of Ogg Vorbis libraries (=dir)],
	[ogg_vorbislib="$withval"],
	[ogg_vorbislib=auto])

AC_ARG_WITH(ogg_vorbisinc,
	[  --with-ogg-vorbisinc    Location of Ogg Vorbis headers (=dir)],
	[ogg_vorbisinc="$withval"],
	[ogg_vorbisinc=auto])

dnl Checks for programs.

AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_CPP
AC_C_INLINE

AC_CHECK_PROGS(SED, sed)

dnl Set host type

AC_CANONICAL_SYSTEM

case "$target" in
	*cygwin* )
		CFLAGS="$CFLAGS -mno-cygwin"
		LDFLAGS="$LDFLAGS -mno-cygwin"
esac

dnl Initial values for exported symbols.

NEED_OSS=0
NEED_SUNAU=0
NEED_ALSA=0
PLAY_SUPPORT=0

dnl Extra CFLAGS if we have gcc
if test "$GCC" = yes
then
    CFLAGS="$CFLAGS -Wall"
fi

dnl Check for system dependent features.

AC_C_BIGENDIAN

dnl Checks for libraries.

dnl Check if math library is needed.

AC_CHECKING(if math library is required during link)
AC_CHECK_FUNC(pow)
if test "$ac_cv_func_pow" = no
then
  AC_CHECK_LIB(m, pow)
fi

dnl Test for GSM library.

if test "$gsmlib" != auto  && test "$gsmlib" != no
then
  LIBS="$LIBS -L$gsmlib"
fi

dnl Need to tell preprocess where to look for GSM include files
dnl when they are not in system directories.  Because of this make
dnl a backup copy of the CPPFLAGS.
ac_save_CPPFLAGS="$CPPFLAGS"

if test "$gsminc" != auto && test "$gsminc" != no
then
  CFLAGS="$CFLAGS -I$gsminc"
  ac_save_CPPFLAGS="$CPPFLAGS"
  if test \! -z "$gsminc" ; then
    CPPFLAGS="$CPPFLAGS -I$gsminc"
  fi
fi

AC_CHECK_HEADER(gsm.h, gsminc=yes, gsminc=no)
if test "$gsminc" = yes
then
  AC_CHECK_LIB(gsm, gsm_create)
fi
CPPFLAGS="$ac_save_CPPFLAGS"


dnl Test for Ogg Vorbis libraries.

if test "$ogg_vorbislib" != auto  && test "$ogg_vorbislib" != no
then
  LIBS="$LIBS -L$ogg_vorbislib"
fi

dnl Need to tell preprocess where to look for Ogg Vorbis include files
dnl when they are not in system directories.  Because of this make
dnl a backup copy of the CPPFLAGS.
ac_save_CPPFLAGS="$CPPFLAGS"

if test "$ogg_vorbisinc" != auto && test "$ogg_vorbisinc" != no
then
  CFLAGS="$CFLAGS -I$ogg_vorbisinc"
  ac_save_CPPFLAGS="$CPPFLAGS"
  if test \! -z "$ogg_vorbisinc" ; then
    CPPFLAGS="$CPPFLAGS -I$ogg_vorbisinc"
  fi
fi

AC_CHECK_HEADER(vorbis/codec.h, ogg_vorbisinc=yes, ogg_vorbisinc=no)
if test "$ogg_vorbisinc" = yes
then
  AC_CHECK_LIB(vorbis, vorbis_analysis_init,
               LIBS="$LIBS -logg -lvorbis -lvorbisfile -lvorbisenc"
               AC_DEFINE(HAVE_LIBVORBIS))
fi
CPPFLAGS="$ac_save_CPPFLAGS"

dnl Checks for header files.

AC_CHECK_HEADERS(getopt.h unistd.h malloc.h byteswap.h sys/types.h inttypes.h stdint.h)

dnl Checks for library functions.

AC_CHECK_FUNCS(getopt strerror memmove rand)

dnl Checks for system services.

if test "$alsa_dsp" = auto
then
	AC_CHECK_HEADERS(linux/asound.h, alsa_dsp=yes)
fi

if test "$alsa_dsp" = yes
then
	AC_MSG_CHECKING([for ALSA ioctl API])
	AC_TRY_COMPILE(
[
#include <linux/asound.h>
],
[
snd_pcm_capture_info_t c_info;
],
		alsa_api_ver=oldapi,alsa_api_ver=newapi)
	AC_MSG_RESULT($alsa_api_ver)
	CFLAGS="$CFLAGS -DALSA_PLAYER"
	if test "$alsa_api_ver" = oldapi; then CFLAGS="$CFLAGS -DUSE_OLD_API"; fi
	NEED_ALSA=1
	PLAY_SUPPORT=1
fi

if test "$oss_dsp" = auto
then
	AC_CHECK_HEADERS(sys/soundcard.h machine/soundcard.h, oss_dsp=yes)
fi

if test "$oss_dsp" = yes
then
	CFLAGS="$CFLAGS -DOSS_PLAYER"
	NEED_OSS=1
	PLAY_SUPPORT=1
fi

if test "$sun_audio" = auto
then
	AC_CHECK_HEADERS(sys/audioio.h sun/audioio.h, sun_audio=yes)
fi

if test "$sun_audio" = yes
then
	CFLAGS="$CFLAGS -DSUNAUDIO_PLAYER"
	NEED_SUNAU=1
	PLAY_SUPPORT=1
fi

dnl The end

if test "$old_rate" = yes
then
	CFLAGS="$CFLAGS -DUSE_OLD_RATE"
fi
if test "$enable_fast_ulaw" = yes
then
	CFLAGS="$CFLAGS -DFAST_ULAW_CONVERSION"
fi
if test "$enable_fast_alaw" = yes
then
	CFLAGS="$CFLAGS -DFAST_ALAW_CONVERSION"
fi

LIBS="-L. -lst $LIBS"

AC_SUBST(NEED_OSS)
AC_SUBST(NEED_SUNAU)
AC_SUBST(NEED_ALSA)
AC_SUBST(PLAY_SUPPORT)

dnl Generate output files...

AC_OUTPUT([Makefile])

if test ! -f tests.sh; then cp ${srcdir}/tests.sh tests.sh; fi
if test ! -f monkey.au; then cp ${srcdir}/monkey.au monkey.au; fi
if test ! -f monkey.voc; then cp ${srcdir}/monkey.voc monkey.voc; fi

echo
echo "Configure finished.  Do 'make; make install' to compile and install SoX."
echo

dnl Local Variables:
dnl comment-start: "dnl "
dnl comment-end: ""
dnl comment-start-skip: "\\bdnl\\b\\s *"
dnl compile-command: "autoconf"
dnl End:
